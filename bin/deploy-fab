#!/usr/bin/env bash
set -ex

export SOLC_FLAGS=${SOLC_FLAGS:-"--optimize"}
export ETH_GAS=${ETH_GAS:-"3500000"}
# export ETH_FROM=${ETH_FROM:-$(seth rpc eth_coinbase)}

if [ -z "$1" ]
then
  echo "[Usage] deploy-fab [RootChain address]" && exit 1
else

# if [[ -z "$SKIP_BUILD_IF_ALREADY_BUILT" || ( -n "$SKIP_BUILD_IF_ALREADY_BUILT" && ! -f out/SaiTop.abi ) ]]; then dapp build; fi

  # export SETH_ASYNC=yes

  GEM_FAB=$(dapp create GemFab)
  RGEM_FAB=$(dapp create RGemFab)
  VOX_FAB=$(dapp create VoxFab)
  TUB_FAB=$(dapp create TubFab)
  TAP_FAB=$(dapp create TapFab)
  TOP_FAB=$(dapp create TopFab)
  MOM_FAB=$(dapp create MomFab)
  DAD_FAB=$(dapp create DadFab)

  # export SETH_ASYNC=no
  #
  # GEM_FAB=$(seth receipt $GEM_FABtx contractAddress)
  # RGEM_FAB=$(seth receipt $RGEM_FABtx contractAddress)
  # VOX_FAB=$(seth receipt $VOX_FABtx contractAddress)
  # TUB_FAB=$(seth receipt $TUB_FABtx contractAddress)
  # TAP_FAB=$(seth receipt $TAP_FABtx contractAddress)
  # TOP_FAB=$(seth receipt $TOP_FABtx contractAddress)
  # MOM_FAB=$(seth receipt $MOM_FABtx contractAddress)
  # DAD_FAB=$(seth receipt $DAD_FABtx contractAddress)
  ROOT_CHAIN=$1

fi

cat > load-fab-$(seth chain) << EOF
#!/bin/bash

# fab deployment on $(seth chain) from $(git rev-parse HEAD)
# $(date)

export GEM_FAB=$GEM_FAB
export RGEM_FAB=$RGEM_FAB
export VOX_FAB=$VOX_FAB
export TAP_FAB=$TAP_FAB
export TUB_FAB=$TUB_FAB
export TOP_FAB=$TOP_FAB
export MOM_FAB=$MOM_FAB
export DAD_FAB=$DAD_FAB
export ROOT_CHAIN=$ROOT_CHAIN
EOF
